const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/ui-components-U3Obq_ZR.js","assets/react-vendor-B6114-rA.js","assets/supabase-C8p_czby.js"])))=>i.map(i=>d[i]);
import{_}from"./supabase-C8p_czby.js";import{r as s}from"./react-vendor-B6114-rA.js";import{g as k,a as V,b as G,e as B,h as F,i as q,k as H,m as W,n as Z,o as O,u as j,s as $}from"./ui-components-U3Obq_ZR.js";const J="+593984280334",Y="+593998799579",U={PICHINCHA:"0122407273 (Jeremias Joel Guale)",GUAYAQUIL:"0122407273 (Jeremias Joel Guale)",PACIFICO:"1061220256 (Byron Guale)",PAYPAL:"guale2023@outlook.com"};function ce(v){const[b,p]=s.useState(!1),[y,w]=s.useState({isOpen:!1,message:""}),R=a=>{w({isOpen:!0,message:a})},A=()=>{w({isOpen:!1,message:""})},N=a=>{const{service:P,price:c,duration:u,devices:i,customer:d,phone:g,email:f,paymentMethod:m,notes:E}=a;return`🎬 *Nueva Compra - StreamZone*

👤 *Cliente:* ${d}
📱 *WhatsApp:* ${g}
📧 *Email:* ${f||"No proporcionado"}

🎯 *Servicio:* ${P}
💰 *Precio:* $${c}
⏱️ *Duración:* ${u} ${u===1?"mes":"meses"}
📱 *Dispositivos:* ${i}
💳 *Método de pago:* ${m}
📝 *Notas:* ${E||"Ninguna"}

💳 *Datos para transferencia:*
🏦 Pichincha: ${U.PICHINCHA}
🏛️ Guayaquil: ${U.GUAYAQUIL}
🌊 Pacífico: ${U.PACIFICO}
💳 PayPal: ${U.PAYPAL}

¡Gracias por tu compra! 🎉`},t=a=>{var g,f,m;const P=N(a),c=`https://wa.me/${J.replace("+","")}?text=${encodeURIComponent(P)}`,u=`https://wa.me/${Y.replace("+","")}?text=${encodeURIComponent(P)}`,i=document.createElement("div");i.className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50",i.innerHTML=`
      <div class="bg-white rounded-xl p-6 max-w-md mx-4 shadow-2xl">
        <div class="flex justify-between items-center mb-4">
          <h3 class="text-xl font-bold text-gray-800">¡Compra Registrada! 🎉</h3>
          <button id="closeModal" class="text-gray-500 hover:text-gray-700 text-2xl">&times;</button>
        </div>
        <div class="bg-orange-50 border border-orange-200 rounded-lg p-3 mb-4">
          <p class="text-orange-800 text-sm font-medium">⚠️ PASO OBLIGATORIO</p>
          <p class="text-orange-700 text-xs mt-1">Debes contactar por WhatsApp para confirmar tu compra y recibir las credenciales</p>
        </div>
        <p class="text-gray-600 mb-6">Selecciona un agente para continuar con tu compra:</p>
        <div class="space-y-3">
          <button id="agent1" class="w-full bg-green-500 hover:bg-green-600 text-white py-3 px-4 rounded-lg font-semibold transition-colors">
            👨‍💼 Agente 1 (+593 98 428 0334)
          </button>
          <button id="agent2" class="w-full bg-blue-500 hover:bg-blue-600 text-white py-3 px-4 rounded-lg font-semibold transition-colors">
            👨‍💼 Agente 2 (+593 99 879 9579)
          </button>
        </div>
      </div>
    `,document.body.appendChild(i);const d=()=>{try{i&&i.parentNode&&document.body.removeChild(i)}catch{console.log("Modal ya cerrado")}};(g=document.getElementById("agent1"))==null||g.addEventListener("click",()=>{d(),setTimeout(()=>{try{window.open(c,"_blank")}catch{alert("No se pudo abrir WhatsApp automáticamente. Por favor, contacta al Agente 1: +593 98 428 0334")}},100)}),(f=document.getElementById("agent2"))==null||f.addEventListener("click",()=>{d(),setTimeout(()=>{try{window.open(u,"_blank")}catch{alert("No se pudo abrir WhatsApp automáticamente. Por favor, contacta al Agente 2: +593 99 879 9579")}},100)}),(m=document.getElementById("closeModal"))==null||m.addEventListener("click",d)};return{processPurchase:async a=>{p(!0);try{console.log("🛒 Procesando compra para usuario registrado:",a);const P={customer:a.customer||"Cliente StreamZone",phone:a.phone||"+593000000000",service:a.service||"Servicio Premium",price:a.price||10,duration:a.duration||1,devices:a.devices||1,total:a.total||10,paymentMethod:a.paymentMethod||"pichincha",notes:a.notes||"",email:a.email||"cliente@streamzone.com",start:a.start||new Date().toISOString().slice(0,10),end:a.end||new Date(Date.now()+30*24*60*60*1e3).toISOString().slice(0,10)};console.log("✅ Datos garantizados para usuario registrado:",P),console.log("🎯 Mostrando panel de agentes..."),t(P);try{console.log("💾 Intentando guardar en BD en segundo plano..."),console.log("🔍 Buscando usuario existente por email:",a.email);const{data:c}=await k(a.email);let u=c==null?void 0:c.id,i=c==null?void 0:c.phone;if(u)console.log("✅ Usuario encontrado por email:",u),console.log("📱 Teléfono del usuario en BD:",i);else{console.log("🔍 Usuario no encontrado por email, buscando por teléfono:",a.phone);const{data:d,error:g}=await V(a.phone);if(d!=null&&d.id)u=d.id,i=d.phone,console.log("✅ Usuario encontrado por teléfono:",u);else{console.log("👤 Usuario no encontrado, creando nuevo usuario...");const f={name:a.customer,phone:a.phone,email:a.email||"sin-email@temp.com"},{data:m,error:E}=await G(f);if(E){console.warn("⚠️ Error creando usuario:",E),console.error("❌ NO SE PUEDE CONTINUAR SIN USUARIO VÁLIDO");return}else u=m==null?void 0:m.id,i=m==null?void 0:m.phone,console.log("✅ Usuario creado exitosamente:",u)}}if(u){console.log("🎯 TENEMOS userId:",u);const d={customer:a.customer,phone:i||a.phone,service:a.service,start:a.start,end:a.end,months:a.duration,validated:!1};console.log("📱 Teléfono del formulario:",a.phone),console.log("📱 Teléfono de la BD (usado):",i||a.phone),console.log("💾 Guardando compra pendiente en BD (campos correctos):",d),console.log("🔍 Llamando a createPurchase con:",JSON.stringify(d,null,2));const{data:g,error:f}=await B(d);f?(console.error("❌ Error guardando compra:",f),console.error("❌ Detalles del error:",JSON.stringify(f,null,2)),console.error("❌ Tipo de error:",typeof f),console.error("❌ Mensaje del error:",f.message)):(console.log("✅ Compra guardada como pendiente:",g),console.log("✅ ID de la compra guardada:",g==null?void 0:g.id),console.log("✅ Validated status:",g==null?void 0:g.validated),console.log("🎯 ¡COMPRA GUARDADA EXITOSAMENTE! Debería aparecer en admin."),console.log("🔄 Forzando recarga inmediata de compras pendientes..."),setTimeout(async()=>{var m;try{const{getPendingPurchases:E}=await _(async()=>{const{getPendingPurchases:x}=await import("./ui-components-U3Obq_ZR.js").then(e=>e.D);return{getPendingPurchases:x}},__vite__mapDeps([0,1,2])),T=await E();console.log("🔄 RESULTADO INMEDIATO de getPendingPurchases:",T),console.log("🔄 Compras pendientes encontradas:",((m=T.data)==null?void 0:m.length)||0)}catch(E){console.error("❌ Error en recarga inmediata:",E)}},1e3))}else console.error("❌ NO HAY userId - NO SE PUEDE GUARDAR LA COMPRA"),console.error("❌ purchaseData:",a)}catch(c){console.warn("⚠️ Error en BD (no crítico):",c)}}catch(P){console.error("❌ Error crítico:",P),R("Error al procesar la compra. Por favor, inténtalo de nuevo.")}finally{p(!1)}},isProcessing:b,generateWhatsAppMessage:N,errorModal:y,closeErrorModal:A}}function ie(v){const[b,p]=s.useState([]),[y,w]=s.useState([]),[R,A]=s.useState([]),[N,t]=s.useState([]),[I,a]=s.useState(null),[P,c]=s.useState(!1),[u,i]=s.useState(null),d=async()=>{c(!0),i(null);try{console.log("🔄 loadAllPurchasesFromSupabase: Iniciando carga...");const e=await Z();return console.log("🔄 loadAllPurchasesFromSupabase: Resultado recibido:",e),e.data&&Array.isArray(e.data)?(p(e.data),console.log("✅ loadAllPurchasesFromSupabase: Todas las compras cargadas desde Supabase:",e.data.length),e.data.length>0&&console.log("📋 Primeras 3 compras:",e.data.slice(0,3).map(o=>({id:o.id,customer:o.customer,validated:o.validated,created_at:o.created_at}))),e.data):(console.warn("⚠️ loadAllPurchasesFromSupabase: No se pudieron cargar las compras desde Supabase"),p([]),[])}catch(e){return console.error("❌ loadAllPurchasesFromSupabase: Error cargando compras desde Supabase:",e),i("Error cargando compras desde la base de datos"),p([]),[]}finally{c(!1)}},g=async()=>{try{console.log("🔄 loadPendingPurchases: Iniciando carga...");const e=await F();return console.log("🔄 loadPendingPurchases: Resultado recibido:",e),e.data&&Array.isArray(e.data)?(w(e.data),console.log("✅ loadPendingPurchases: Compras pendientes cargadas:",e.data.length),e.data):(console.log("⚠️ loadPendingPurchases: No hay datos o no es array, estableciendo array vacío"),w([]),[])}catch(e){return console.error("❌ loadPendingPurchases: Error cargando compras pendientes:",e),w([]),[]}},f=async e=>{try{const o=await W(e);return o.data?(A(o.data),console.log("✅ Compras activas del usuario cargadas:",o.data.length),o.data):(A([]),[])}catch(o){return console.error("❌ Error cargando compras del usuario:",o),A([]),[]}},m=async()=>{try{const e=await H(7);return e.data?(t(e.data),console.log("✅ Servicios próximos a vencer cargados:",e.data.length),e.data):(t([]),[])}catch(e){return console.error("❌ Error cargando servicios próximos a vencer:",e),t([]),[]}},E=async()=>{try{const e=await q();return e.data?(a(e.data),console.log("✅ Estadísticas de renovaciones cargadas"),e.data):(a(null),null)}catch(e){return console.error("❌ Error cargando estadísticas de renovaciones:",e),a(null),null}},T=async()=>{console.log("🔄 refreshAllStats: Iniciando recarga completa..."),c(!0),i(null);try{console.log("🔄 refreshAllStats: Cargando todas las compras..."),await d(),console.log("🔄 refreshAllStats: Cargando compras pendientes..."),await g(),console.log("🔄 refreshAllStats: Cargando servicios próximos a vencer..."),await m(),console.log("🔄 refreshAllStats: Cargando estadísticas de renovaciones..."),await E(),console.log("✅ refreshAllStats: Todas las estadísticas actualizadas desde Supabase")}catch(e){console.error("❌ refreshAllStats: Error actualizando estadísticas:",e),i("Error actualizando estadísticas")}finally{c(!1)}};return s.useEffect(()=>{console.log("🔄 useSupabaseData: Iniciando carga de datos de admin..."),T()},[v]),s.useEffect(()=>{console.log("🔄 useSupabaseData: Cargando compras pendientes al inicio..."),(async()=>{const o=await g();console.log("🎯 RESULTADO INICIAL loadPendingPurchases:",o)})()},[]),s.useEffect(()=>{{console.log("🔄 useSupabaseData: Iniciando actualización automática cada 5 segundos...");const e=setInterval(async()=>{console.log("🔄 ACTUALIZACIÓN AUTOMÁTICA: Recargando compras pendientes...");try{const o=await g();console.log("🔄 ACTUALIZACIÓN AUTOMÁTICA: Compras pendientes:",(o==null?void 0:o.length)||0)}catch(o){console.error("❌ Error en actualización automática:",o)}},5e3);return()=>{console.log("🛑 useSupabaseData: Deteniendo actualización automática..."),clearInterval(e)}}},[v]),s.useEffect(()=>{A([])},[v]),s.useEffect(()=>{const e=o=>{o.key==="userPhone"&&o.newValue&&(console.log("🔄 Teléfono de usuario cambiado, recargando compras..."),c(!0),f(o.newValue).finally(()=>c(!1)))};return window.addEventListener("storage",e),()=>window.removeEventListener("storage",e)},[]),{allPurchases:b,pendingPurchases:y,userActivePurchases:R,expiringServices:N,renewalStats:I,loading:P,error:u,loadAllPurchasesFromSupabase:d,loadPendingPurchases:g,loadUserActivePurchases:f,loadExpiringServices:m,loadRenewalStats:E,refreshAllStats:T,refreshUserPurchases:async e=>{console.log("🔄 Forzando recarga de compras del usuario:",e),c(!0);try{const o=await f(e);return console.log("✅ Compras del usuario recargadas:",(o==null?void 0:o.length)||0),o}catch(o){return console.error("❌ Error recargando compras del usuario:",o),[]}finally{c(!1)}}}}const de=()=>{const[v,b]=s.useState(()=>O.load("userProfile",null)),[p,y]=s.useState(()=>!!O.load("adminLogged",!1)),[w,R]=s.useState(()=>O.load("userProfileData",null)),[A,N]=s.useState(()=>O.load("allPurchases",[])),[t,I]=s.useState("login"),[a,P]=s.useState(""),[c,u]=s.useState(""),[i,d]=s.useState("");return s.useEffect(()=>{O.save("userProfile",v)},[v]),s.useEffect(()=>{O.save("userProfileData",w)},[w]),s.useEffect(()=>{O.save("allPurchases",A)},[A]),s.useEffect(()=>{O.save("adminLogged",p)},[p]),{user:v,setUser:b,adminLogged:p,setAdminLogged:y,userProfile:w,setUserProfile:R,allPurchases:A,setAllPurchases:N,authStep:t,setAuthStep:I,resetEmail:a,setResetEmail:P,resetToken:c,setResetToken:u,resetCode:i,setResetCode:d,handleLogin:o=>{b(o)},handleLogout:()=>{b(null),R(null)},handleAdminLogin:o=>{o&&y(!0)},handleAdminLogout:()=>{y(!1)},handleForgotPassword:(o,M)=>{P(o),u(M),I("code")},handleCodeVerified:o=>{u(o),I("newpassword")},handlePasswordReset:()=>{I("login")}}},K=[{email:"gualejeremi@gmail.com",role:"principal",canGenerateKeys:!1,canDeleteOthers:!0,isProtected:!0}],ue=(v=[],b,p)=>{const[y,w]=s.useState(K),[R,A]=s.useState(!1),[N,t]=s.useState(""),[I,a]=s.useState("dashboard"),[P,c]=s.useState(!1),[u,i]=s.useState(!1),[d,g]=s.useState(!1),[f,m]=s.useState(!1),[E,T]=s.useState(null),[x,e]=s.useState(!1),[o,M]=s.useState(null),D=y.map(r=>r.email);return{adminUsers:y,setAdminUsers:w,loading:R,setLoading:A,msg:N,setMsg:t,adminView:I,setAdminView:a,adminDrawerOpen:P,setAdminDrawerOpen:c,adminMenuOpen:u,setAdminMenuOpen:i,adminRegisterPurchaseOpen:d,setAdminRegisterPurchaseOpen:g,editPurchaseOpen:f,setEditPurchaseOpen:m,editingPurchase:E,setEditingPurchase:T,approvePurchaseOpen:x,setApprovePurchaseOpen:e,selectedPurchase:o,setSelectedPurchase:M,adminEmails:D,handleToggleValidate:async r=>{console.log("🔍 handleToggleValidate called with ID:",r),console.log("📦 Current purchases:",v);const n=v.find(l=>l.id===r);if(console.log("🎯 Found purchase:",n),!n){console.log("❌ Purchase not found");return}if(!n.validated){M(n),e(!0);return}const S="invalidar";if(console.log("🔄 Invalidating purchase:",r),!$){console.error("❌ Supabase no está configurado"),t("❌ Error: Base de datos no disponible"),setTimeout(()=>t(""),3e3);return}if(!confirm(`¿Estás seguro de que quieres ${S} la compra de ${n.customer} - ${n.service}?`)){console.log("❌ User cancelled");return}A(!0);try{console.log("🔄 Actualizando en Supabase...",{purchaseId:r,validated:!1});const{error:l}=await $.from("purchases").update({validated:!1}).eq("id",r);if(l)throw console.error("❌ Error de Supabase:",l),l;console.log("✅ Actualización en Supabase exitosa"),b(h=>h.map(C=>C.id===r?{...C,validated:!1}:C)),t("✅ Compra invalidada exitosamente"),setTimeout(()=>t(""),3e3),p&&(console.log("🔄 Recargando datos desde Supabase..."),await p())}catch(l){console.error("Error al actualizar compra:",l),t("❌ Error al actualizar la compra"),setTimeout(()=>t(""),3e3)}finally{A(!1)}},handleDeletePurchase:async r=>{console.log("🗑️ handleDeletePurchase called with ID:",r),console.log("📦 Current purchases:",v);const n=v.find(l=>l.id===r);if(console.log("🎯 Found purchase:",n),!n){console.log("❌ Purchase not found");return}n.validated;const S=n.validated?`⚠️ ADVERTENCIA: ¿Estás seguro de que quieres ELIMINAR PERMANENTEMENTE la compra activa de ${n.customer} - ${n.service}?

Esta acción:
• Eliminará la compra de la base de datos
• El cliente perderá acceso al servicio
• NO se puede deshacer

Escribe "ELIMINAR" para confirmar:`:`¿Estás seguro de que quieres rechazar la compra de ${n.customer} - ${n.service}?`;if(confirm(S)){if(!$){console.error("❌ Supabase no está configurado"),t("❌ Error: Base de datos no disponible"),setTimeout(()=>t(""),3e3);return}if(n.validated&&prompt("Para confirmar la eliminación, escribe exactamente: ELIMINAR")!=="ELIMINAR"){alert('❌ Eliminación cancelada. Debes escribir "ELIMINAR" para confirmar.');return}A(!0);try{console.log("🗑️ Eliminando de Supabase...",{purchaseId:r});const{error:l}=await $.from("purchases").delete().eq("id",r);if(l)throw console.error("❌ Error de Supabase:",l),l;console.log("✅ Eliminación en Supabase exitosa"),b(h=>h.filter(C=>C.id!==r)),t(`✅ Compra ${n.validated?"eliminada":"rechazada"} exitosamente`),setTimeout(()=>t(""),3e3),p&&(console.log("🔄 Recargando datos desde Supabase..."),await p())}catch(l){console.error("Error al eliminar compra:",l),t("❌ Error al eliminar la compra"),setTimeout(()=>t(""),3e3)}finally{A(!1)}}},handleEditPurchase:r=>{T(r),m(!0)},handleReminderPurchase:r=>{const n=new Date,S=new Date(r.end),l=Math.ceil((S.getTime()-n.getTime())/(1e3*60*60*24));let h=`🎬 *StreamZone* - Renovación de Servicio

`;h+=`Estimado/a ${r.customer},

`,l<=0?(h+=`⚠️ Su servicio *${r.service}* venció el ${r.end}.

`,h+=`🔄 Para reactivar su cuenta, responda este mensaje.

`):l===1?(h+=`⏰ Su servicio *${r.service}* vence mañana (${r.end}).

`,h+=`🔄 Renueve ahora para evitar interrupciones.

`):l<=3?(h+=`📅 Su servicio *${r.service}* vence en ${l} días (${r.end}).

`,h+=`🔄 Renueve con anticipación para continuar sin interrupciones.

`):(h+=`📋 Recordatorio: Su servicio *${r.service}* vence en ${l} días (${r.end}).

`,h+=`🔄 Puede renovar cuando guste respondiendo este mensaje.

`),h+=`💬 Responda para proceder con la renovación.

`,h+=`Atentamente,
*Equipo StreamZone* 🎯`;const L=`https://wa.me/593${r.phone.replace(/[^\d]/g,"")}?text=${encodeURIComponent(h)}`;try{window.open(L,"_blank"),t(`📱 Recordatorio enviado a ${r.customer} (${r.phone})`),setTimeout(()=>t(""),5e3)}catch(z){console.error("Error abriendo WhatsApp:",z),t("❌ Error al abrir WhatsApp. Por favor, contacta manualmente."),setTimeout(()=>t(""),3e3)}},handleApproveSuccess:async()=>{if(console.log("🎉 handleApproveSuccess called"),console.log("🎯 selectedPurchase:",o),console.log("🔄 Actualizando estado local inmediatamente..."),b(r=>{const n=r.map(S=>S.id===(o==null?void 0:o.id)?{...S,validated:!0}:S);return console.log("📋 Estado actualizado:",n),n}),console.log("🔄 Forzando re-render del componente..."),p){console.log("🔄 Recargando datos desde Supabase después de aprobación...");try{await p(),console.log("✅ Datos recargados exitosamente desde Supabase"),o&&o.phone&&console.log("🔄 Forzando recarga de compras del usuario:",o.phone)}catch(r){console.error("❌ Error recargando datos:",r)}}else console.warn("⚠️ refreshFromSupabase function not available")},handleUpdatePurchase:async(r,n)=>{console.log("🔄 ===== INICIANDO ACTUALIZACIÓN DE COMPRA ====="),console.log("🆔 Purchase ID:",r),console.log("📝 Updates recibidos:",n),console.log("📊 Tipo de updates:",typeof n),console.log("🔍 Keys de updates:",Object.keys(n));try{if(!r||r==="undefined"||r==="null")throw new Error("ID de compra inválido");if(!n||Object.keys(n).length===0)throw new Error("No hay datos para actualizar");console.log("💾 Guardando cambios en Supabase..."),console.log("📤 Datos enviados a updatePurchase:",{id:r,updateData:n});const{data:S,error:l}=await j(r,n);if(console.log("📥 Respuesta de updatePurchase:",{data:S,error:l}),l){console.error("❌ Error guardando en Supabase:",l),console.error("❌ Detalles del error:",{code:l.code,message:l.message,details:l.details,hint:l.hint}),t(`❌ Error al guardar: ${l.message}`),setTimeout(()=>t(""),5e3);return}console.log("✅ Cambios guardados exitosamente en Supabase:",S),console.log("🔄 Actualizando estado local..."),b(h=>{const C=h.map(L=>L.id===r?{...L,...n}:L);return console.log("📊 Estado local actualizado:",C.find(L=>L.id===r)),C}),t("✅ Compra actualizada correctamente en la base de datos"),setTimeout(()=>t(""),5e3),p&&(console.log("🔄 Recargando datos desde Supabase..."),await p(),console.log("✅ Datos recargados desde Supabase")),console.log("🎉 ===== ACTUALIZACIÓN COMPLETADA EXITOSAMENTE =====")}catch(S){console.error("❌ ===== ERROR EN ACTUALIZACIÓN ====="),console.error("❌ Error actualizando compra:",S),console.error("❌ Stack trace:",S.stack),t(`❌ Error: ${S.message}`),setTimeout(()=>t(""),5e3)}},handleExportCSV:()=>{}}};export{ie as a,ue as b,ce as c,de as u};
